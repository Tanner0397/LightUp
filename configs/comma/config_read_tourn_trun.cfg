#Config for testing
#All values that have a 'yes' or a 'no' can only be 'yes' or 'no'
#All values that are nonnegative integers can only be nonnegative integers
#seed is the only floating point value


[GENERATOR]
#Generator Settings
#settings this to no will allow the program to construct a game using a date file
generate = no
rows = 12
cols = 10
#Base percentage of panels that are walls. Number of walls may be slightly higher in order to guarantee solvability
wall_percent = 25
#If the seed is empty, program will generate map based off of time. Only use floating point numbers.
seed =

[PATHS]
#Paths should be relative to where run.sh is located, so the root of the project folder
file_path = maps/game.txt
log_path = logs/comma/log_read_tourn_trun.txt
solution_path = solutions/comma/solution_read_tourn_trun.txt
solution_image = solutions/comma/soln_read_tourn_trun.txt

[STATISTICS]
#The number of runs in a single experiment
runs = 30
#The number of evaluations in a single run
evals = 10000

[PARAMETERS]
#Random search can be slow, so this option is to ignore the wall value enforcement
enforce_wall_value = yes
forced_wall_validity = yes
penalty_function = yes
#The penalty coefficient should be a floating point value
penalty_coefficient = 2.3


[EA_PARAMATERS]
#valid values for survival_selection are "random", "trun", "k_tourn", and "fitness_prop"
survival_selection = trun

#valid values for survival strategy are "plus" or "comma". Note: for "comma" to work, lambda must be larger than mu
survival_strategy = comma

#valid values for parent_selction are "random", "fitness_prop", and "k_tourn"
parent_selection = k_tourn

convergence_termination = yes

#Note: this will do n point crossover where ever it is available some times it cannot be done since
#chromosomes can be of variable length
n_point_crossover = yes
n_points = 2

mu = 100
lambda = 150

tournament_size_parent = 15
tournament_size_survival = 15

#mutation rate is a floating point number
mutation_rate = 0.25
insert_mutation_rate = 0.25

evals_until_term = 10000
termination_convergence_criterion = 5000

#Use repair function
repair_function = yes
